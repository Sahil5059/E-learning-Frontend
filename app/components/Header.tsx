
'use client';
import React,{FC, useEffect, useState} from 'react'
import Link from 'next/link';
import avatar from "../../public/assets/avatar.jpg"
import Navitems from '../utils/Navitems'; //component-in from 9th step
import { ThemeSwitcher } from '../utils/ThemesSwitcher'; //component-import in 9th step
import {HiOutlineMenuAlt3,HiOutlineUserCircle} from "react-icons/hi"; //imported in 9th step
import CustomModal from '../utils/CustomModal'; //imported in 15th step
import Login from './Auth/Login'; //imported in 17th step
import SignUp from './Auth/SignUp'; //imported in 17th step
import Verification from './Auth/Verification'; //imported in 17th step
import { useSelector } from 'react-redux';
import Image from 'next/image'; //imported in 36th step
import { useSession } from 'next-auth/react'; //imported in 46th step
import { useLogOutQuery, useSocialAuthMutation } from '../../redux/features/auth/authApi'; //imported in 46th step and 55th step
import toast from 'react-hot-toast'; //imported in 46th step
//defining props
type Props = {
    open: boolean;
    setOpen:(open: boolean) => void; //will be used for profile icon of user
    activeItem: number;
    route: string;
    setRoute:(route:string) => void; //if "setRoute" is declared as void, it means that the function does not return any value - chatGPT
}
//creating page
const Header:FC<Props> = ({activeItem,open,setOpen,route,setRoute}) => {
  const [active, setActive] = useState(false); //this will be used for sticky navbar
  const [openSidebar, setOpensidebar] = useState(false); //this will be used to open/close the mobile sidebar

  //STEP: 35 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  const {user} = useSelector((state:any) => state.auth);

  

  const {data} = useSession();
  const [socialAuth,{isSuccess,error}] = useSocialAuthMutation();
  useEffect(() => {
    if(!user){
        if(data){
            socialAuth({
                email: data?.user?.email,
                name: data?.user?.name,
                avatar: data?.user?.image,
            });
        }
    }
    if(data === null){
        if(isSuccess){
            toast.success("Logged in Successfully"); //for logging-in
        }
    }
    //eslint-disable-next-line react-hooks/exhaustive-deps
    },[data,user])
  //watch- 2:52:45 to 2:54:10
  //now, we will move towards "user profile page UI" & functionalities
  //OVER: 46 ("c": ../profile & ../profile/page.tsx and "m": ../profile/page.tsx

  //setting up condition for sticky navbar
  if(typeof window !== "undefined"){
    window.addEventListener("scroll", () => {
        if(window.scrollY > 85){
            setActive(true);
        }else{
            setActive(false);
        }
    });
  }
  //setting up code for closing the mobile sidebar
  const handleClose = (e:any) => {
    if(e.target.id === "screen"){
        {
            setOpensidebar(false);
        }
    }
  }
  //sending data to front-end
  return (
    <div className='w-full relative'>
        <div className={`${active ? "dark:bg-opacity-50 dark:bg-gradient-to-b dark:from-gray-900 dark:to-black fixed top-0 left-0 w-full h-[80px] z-[80] border-b dark:border-[#ffffff1c] shadow-xl transition duration-500" : "w-full border-b dark:border-[#ffffff1c] h-[80px] z-[80] dark:shadow"}`}>
            <div className="w-[95%] 800px:w-[92%] m-auto py-2 h-full">
                <div className="w-full h-[80px] flex items-center justify-between p-3">
                    <div>
                        <Link href={"/"} className={`text-[25px] font-Poppins font-[500] text-black dark:text-white`}>E-Learning</Link>
                    </div>

                    {}
                    <div className="flex items-center">
                        <Navitems activeItem={activeItem} isMobile={false}/>
                        <ThemeSwitcher/>
                        <div className="800px:hidden">
                            <HiOutlineMenuAlt3 size={25} className="cursor-pointer dark:text-white text-black" onClick={() => setOpensidebar(true)} /> {/* This icon is the icon used to open sidebar in mobile devices */}
                        </div>
                        {/* <HiOutlineUserCircle size={25} className="hidden 800px:block cursor-pointer dark:text-white text-black" onClick={() => setOpen(true)} /> */}

                        {}
                        {/* first comment the above line of code before proceeding further */}
                        {user ? (
                            <Link href={"/profile"}>
                                <Image src={user.avatar ? user.avatar.url : avatar} alt='' width={30} height={30} className="w-[30px] h-[30px] rounded-full" style={{border: activeItem === 5 ? "2px solid #37a39a" : "none"}}/>
                            </Link>
                        ) : (<HiOutlineUserCircle size={25} className="hidden 800px:block cursor-pointer dark:text-white text-black" onClick={() => setOpen(true)} />)}
                        {/* watch- 2:33:35 to 2:34:45 */}
                        {/* OVER: 36("m": ../../pages/_app.tsx}

                    </div>
                    {/* OVER: 9("c": ../utils/ThemeSwitcher.tsx and "m": ../utils/ThemeSwitcher.tsx}

                </div>
            </div>
            {}
            {/* Setting up code for the mobile sidebar */}
            {openSidebar && (
                <div className="fixed w-full h-screen top-0 left-0 z-[99999] dark:bg-[unset] bg-[#00000024] 800px:hidden" onClick={handleClose} id="screen">
                    <div className="w-[70%] fixed z-[999999999] h-screen bg-white dark:bg-slate-900 dark:bg-opacity-90 top-0 right-0">
                        <Navitems activeItem={activeItem} isMobile={true}/>
                        {user ? (
                            <Link href={"/profile"}>
                                <Image src={user.avatar ? user.avatar.url : avatar} alt='' width={30} height={30} className="w-[30px] h-[30px] ml-6 mt-6 py-6 rounded-full" style={{border: activeItem === 5 ? "2px solid #37a39a" : "none"}}/>
                            </Link>
                        ) : (<HiOutlineUserCircle size={25} className="block ml-6 mt-6 800px:hidden cursor-pointer dark:text-white text-black" onClick={() => setOpen(true)} />)}
                        <br />
                        <br />
                        <p className="text-[16px] ml-6 dark:text-white text-black">Copyright © 2023 Elearning</p>
                    </div>
                </div>
            )}
            {/* OVER: 10("c": ./Route & ./Route/Hero.tsx and "m": ./Route/Hero.tsx}
        </div>
        {}
        {route === "Login" && (
            <>
                {open && (<CustomModal open={open} setOpen={setOpen} setRoute={setRoute} activeItem={activeItem} component={Login}/>)}
            </>
        )}
        {route === "Sign-Up" && (
            <>
                {open && (<CustomModal open={open} setOpen={setOpen} setRoute={setRoute} activeItem={activeItem} component={SignUp}/>)}
            </>
        )}
        {route === "Verification" && (
            <>
                {open && (<CustomModal open={open} setOpen={setOpen} setRoute={setRoute} activeItem={activeItem} component={Verification}/>)}
            </>
        )}
        {/* now, we will set up code for "sign-up & user activation features". So, first create a folder named "redux" inside the "client" folder. Then create a folder (named as "features") and a file (named as "store.ts" inside the "redux" folder. Now, create two files (named as "api" & "auth") inside the "features" folder and then finally, create a file named "apiSlice.ts" inside the "api" folder.) */}
        {/* OVER: 17("m": ../../redux/features/api/apiSlice.ts}
    </div>
  );
}
export default Header;
//OVER: 5("m": ../page.tsx