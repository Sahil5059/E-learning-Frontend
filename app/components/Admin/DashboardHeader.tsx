
"use client";
import { useGetAllNotificationsQuery, useUpdateNotificationStatusMutation } from '../../../redux/features/notifications/notificationsApi';
import { ThemeSwitcher } from '../../../app/utils/ThemesSwitcher';
import React, { FC, useEffect, useState } from 'react';
import { IoMdNotificationsOutline } from "react-icons/io";
import socketIO from "socket.io-client"; //imported in 158th step
import { format } from 'timeago.js';
//defining-props
type Props = {
    open?: boolean; //optional chain because sometimes it will be null
    setOpen?: any;
}
//creating-data


const ENDPOINT = process.env.NEXT_PUBLIC_SOCKET_SERVER_URI || "";
const socketId = socketIO(ENDPOINT, {transports: ["websocket"]});


const DashboardHeader:FC<Props> = ({open,setOpen}) => {


  const {data, refetch} = useGetAllNotificationsQuery(undefined, {refetchOnMountOrArgChange: true});
  const [updateNotificationStatus, {isSuccess}] = useUpdateNotificationStatusMutation();
  const [notifications, setNotifications] = useState<any>([]);
//   const [audio] = useState(new Audio("https://res.cloudinary.com/dnv9hgqku/video/upload/v1707818381/tigiuk1z0jo3ttmzk6mw.mp3"));
//   const playerNotificationSound = () => {
//     audio.play();
//   }
  const handleNotificationStatusChange = async(id:string) => {
    await updateNotificationStatus(id);
  }

  useEffect(() => {
    if(data){
        setNotifications(data.notifications.filter((item:any) => item.status === "unread"));
    }
    if(isSuccess){
        refetch();
    }
    // audio.load();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [data,isSuccess]);

  useEffect(() => {
    socketId.on("newNotification", (data) => {
        refetch();
        // playerNotificationSound();
    });
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);


  return (
    <div className="w-full flex items-center justify-end p-6 fixed top-5 right-0">
        <ThemeSwitcher />
        <div className="relative z-[50] cursor-pointer m-2" onClick={() => setOpen(!open)}>
            <IoMdNotificationsOutline className="text-2xl cursor-pointer dark:text-white text-black" />
            <span className="absolute -top-2 -right-2 bg-[#3ccba0] rounded-full w-[20px] h-[20px] text-[12px] flex items-center justify-center text-white">

                {/* STEP: 160 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/}
                {notifications && notifications.length}
                {}

            </span>
        </div>
        {open && (
            <div className="w-[350px] h-[460px] overflow-y-scroll dark:bg-[#111C43] bg-white shadow-xl absolute top-16 z-10 rounded">
                <h5 className="text-center text-[20px] font-Poppins text-black dark:text-white p-3">Notifications</h5>
                {/* <div className="dark:bg-[#2d3a4ea1] bg-[#00000013] font-Poppins border-b dark:border-b-[#ffffff47] border-b-[#0000000f]">
                    <div className="w-full flex items-center justify-between p-2">
                        <p className="text-black dark:text-white">New Question Received</p>
                        <p className="text-black dark:text-white cursor-pointer">Mark as read</p>
                    </div>
                    <p className="px-2 text-black dark:text-white">Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quibusdam, commodi consectetur dolores cupiditate ipsum aspernatur sunt tempora</p>
                    <p className="p-2 text-black dark:text-white text-[14px]">5 days ago</p>
                </div> */}

                {}
                {/* first, comment the above div before proceeding further */}
                {
                    notifications && notifications.map((item:any, index:number) => (
                        <div key={index} className="dark:bg-[#2d3a4ea1] bg-[#00000013] font-Poppins border-b dark:border-b-[#ffffff47] border-b-[#0000000f]">
                            <div className="w-full flex items-center justify-between p-2">
                                <p className="text-black dark:text-white">{item.title}</p>
                                <p className="text-black dark:text-white cursor-pointer" onClick={() => handleNotificationStatusChange(item._id)}>Mark as read</p>
                            </div>
                            <p className="px-2 text-black dark:text-white">{item.message}</p>
                            <p className="p-2 text-black dark:text-white text-[14px]">{format(item.createdAt)}</p>
                        </div>
                    ))
                    // now that we are done with notification, we will set up the "about" page
                }
                {/* OVER: 161("c": ../../about & ../../about/page.tsx and "m": ../../about/page.tsx) ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/}

            </div>
        )}
    </div>
  );
}
//exporting-data
export default DashboardHeader;
//OVER: 82("m": ./DashboardHero.tsx
