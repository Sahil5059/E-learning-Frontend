
'use client';
import React, { FC, useEffect, useState } from 'react';
import SideBarProfile from './SideBarProfile'; //imported in the 54th step
import { useLogOutQuery } from '@/redux/features/auth/authApi'; //imported in the 57th step
import { signOut, useSession } from 'next-auth/react'; //imported in the 58th step
import ProfileInfo from './ProfileInfo'; //imported in the 60th step
import ChangePassword from './ChangePassword'; //imported in the 70th step
import { useGetUsersAllCoursesQuery } from '../../../redux/features/courses/courseApi';
import CourseCard from '../Course/CourseCard';
//defining-props
type Props = {
    user:any;
}
//creating-data
const Profile:FC<Props> = ({user}) => {
  const [scroll, setScroll] = useState(false);
  const [avatar, setAvatar] = useState(null); //we have chosen "null" as the default value of "avatar" because a lot of times, users do not upload any avatar

  //STEP: 165 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  const [courses, setCourses] = useState([]);
  const {data:UserAllCoursesData, isLoading} = useGetUsersAllCoursesQuery(undefined, {});



  const [logout, setLogout] = useState(false);
  const {} = useLogOutQuery(
    undefined, //default-value
    {
        skip: !logout ? true : false, //basically, it means that the execution of "useLogoutQuery" will be skipped if "not-logout" is true
    }
  )


  const [active, setActive] = useState(1);
  const {data} = useSession();
  
  const logOutHandler = async() => {
    // console.log("yo");
    
    //step
    //first, comment the above line before proceeding further
    try {
      if(data !== null){ //logging-out for social-auth
        await signOut({redirect:false}); //this bascically removes the "next-auth-session" used in social-auth. We have set "redirect:false" because then the user will be redirected to homepage afrter clicking "logout" without the "setLogout(true)" being exectued (only happens in case of social-auth).Since we have already set up code in "useProtected.tsx" to redirect user to homepage if he is accessing a protected route without logging in, we don't need to worry about the redirection to homepage after logging-out
        setLogout(true);
      } else { //logging-out for traditional-login method
        setLogout(true);
      }
    } catch (error) {
      console.log(error);
    }
    //now, go ahead and test the logout feature for both "traditional-login" and "social-auth"
    //over: 58("c": ./ProfileInfo.tsx and "m": ./ProfileInfo.tsx

  }
  //setting up condition for sticky navbar
  if(typeof window !== "undefined"){
    window.addEventListener("scroll", () => {
        if(window.scrollY > 85){
            setScroll(true);
        }else{
            setScroll(false);
        }
    });
  }


  useEffect(() => {
    if(UserAllCoursesData){
      const filteredCourses = user.courses.map((userCourse:any) => UserAllCoursesData.courses.find((course:any) => course._id === userCourse._id)).filter((course:any) => course !== undefined);
      setCourses(filteredCourses);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [UserAllCoursesData]);
  //watch - 6:08:00 to 6:12:15 and the 6:20:25 to


  //sending-data
  return (
    <div className="w-[85%] flex mx-auto">
        <div className={`w-[60px] 800px:w-[310px] h-[450px] dark:bg-slate-900 bg-opacity-90 bg-white border dark:border-[#ffffff1d] border-[#0000001d] rounded-[5px] shadow-xl dark:shadow-sm mt-[80px] mb-[80px] sticky ${scroll ? "top-[120px]" : "top-[30px]"} left-[30px]`}>
        
        {}
        <SideBarProfile user={user} active={active} avatar={avatar} setActive={setActive} logOutHandler={logOutHandler}/>
        {/* OVER: 55("m": ../../redux/auth/authApi.ts}

        </div>

        {}
        {/* now, we will set-up code for updating user profile and password */}
        {
          active === 1 && (
            <div className="w-full h-full bg-transparent mt-[80px]">
              <ProfileInfo avatar={avatar} user={user}/>
            </div>
          )
        }
        {/* OVER: 60("c": ../../redux/features/user & ../../redux/features/user/uerApi.ts and "m": ../../redux/features/user/uerApi.ts}
        
        {}
        {
          active === 2 && (
            <div className="w-full h-full bg-transparent mt-[80px]">
              <ChangePassword/>
            </div>
          )
          //watch- 4:07:50 to  4:10:30
        }
        {/* OVER: 70("m": ../../../redux/features/user/userApi.ts}
        
        {}
        {
          active === 3 && (
            <div className="w-[90%] h-full mt-[80px] ml-10">
              <div className="grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-2 lg:gap-[25px] xl:grid-cols-3 xl:gap-[35px]">
                {
                  courses && courses.map((item:any, index:number) => (<CourseCard item={item} key={index} isProfile={true} />))
                }
              </div>
              {
                courses.length === 0 && (
                  <h1 className="text-center text-[18px] font-Poppins">You don{`'`}t have any purchased courses!</h1>
                )
              }
            </div>
          )
        }
        {}

    </div>
  )
}
//exporting-data
export default Profile;
//OVER: 52("c": ../profle/page.tsx) ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
