
import { redirect } from "next/navigation";
import React from "react";
import UserAuth from "./userAuth";
import { useSelector } from "react-redux";
//defining-props
interface ProtectedProps{
    children: React.ReactNode;
}
//exporting-data
export default function AdminProtected({children}:ProtectedProps){
    const isAuthenticated = UserAuth();
    const {user} = useSelector((state:any) => state.auth);
    if(isAuthenticated){
        if(user){ //we used this logic because during loading state, "user" is not available
            const isAdmin = user?.role === "admin";
            return isAdmin ? children : redirect("/");
        }
    }else{
        return redirect("/");
    }
    //watch - 4:17:20 to 4:18:25
}
//OVER: 75("m": ../Profile/SideBarProfile.tsx
