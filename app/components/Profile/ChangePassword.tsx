
import toast from 'react-hot-toast';
import { useUpdatePasswordMutation } from '../../../redux/features/user/userApi'; //imported in the 72nd step
import { styles } from '../../styles/style';
import React, { FC, useEffect, useState } from 'react';
//defining-props
type Props = {}
//creating-data
const ChangePassword:FC<Props> = (props) => {
  const [oldPassword, setOldPassword] = useState("");
  const [newPassword, setNewPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");


  const [updatePassword,{isSuccess,error}] = useUpdatePasswordMutation(); 


  const passwordChangeHandler = async(e:any) => {
    e.preventDefault();
    

    if(newPassword !== confirmPassword){
        toast.error("New and old passwords do not match");
    }else{
        await updatePassword({oldPassword,newPassword});
    }


  }


  useEffect(() => {
    if(isSuccess){
        toast.success("Password changed successfully");
    }
    if(error){
        if("data" in error){
            const errorData = error as any;
            toast.error(errorData.data.message);
        }
    }
    //eslint-disable-next-line react-hooks/exhaustive-deps
  },[isSuccess,error]);
  //watch- 4:14:50 to 4:15:35
  //now, we will create a protected route for "admin"
  //OVER: 74("c": ../../hooks/adminProtected.tsx and "m": ../../hooks/adminProtected.tsx

  return (
    <div className="w-full pl-7 px-2 800px:p-5 800px:pl-0">
        <h1 className="block text-[25px] 800px:text-[30px] font-Poppins text-center font-[500] text-black dark:text-[#fff] pb-2">Change Password</h1>
        <div className="w-full">
            <form onSubmit={passwordChangeHandler} className="flex flex-col items-center" >
                <div className="w-[100%] 800px:w-[60%] mt-5">
                    <label className="block pb-2 text-black dark:text-[#fff]">Enter your old password</label>
                    <input type="password" className={`${styles.input} !w-[95%] mb-4 800px:mb-0 text-black dark:text-[#fff]`} required value={oldPassword} onChange={(e) => setOldPassword(e.target.value)} />
                </div>
                <div className="w-[100%] 800px:w-[60%] mt-2">
                    <label className="block pb-2 text-black dark:text-[#fff]">Enter your New Password</label>
                    <input type="password" className={`${styles.input} !w-[95%] mb-4 800px:mb-0 text-black dark:text-[#fff]`} required value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />
                </div>
                <div  className="w-[100%] 800px:w-[60%] mt-5">
                <label className="block pb-2 text-black dark:text-[#fff]">Confirm your new password</label>
                <input type="password" className={`${styles.input} !w-[95%] mb-4 800px:mb-0 text-black dark:text-[#fff]`} required value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />
                <input type="submit" value="Update" required className={`w-[95%] h-[40px] border border-[#37a39a] text-center text-black dark:text-[#fff] rounded-[3px] mt-8 cursor-pointer`} />
                </div>
            </form>
        </div>
    </div>
  )
}
//exporting-data
export default ChangePassword;
//OVER: 69("m": ../profile.tsx
